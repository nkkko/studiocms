import DTSBuilder from '@matthiesenxyz/astrodtsbuilder';
import { createResolver } from 'astro-integration-kit';

const { resolve } = createResolver(import.meta.url);

const authLib = DTSBuilder();

authLib.addSingleLineNote(
	'This file is generated by StudioCMS and should not be modified manually.'
);

authLib.addModule('studiocms:auth/lib/encription', {
	namedExports: [
		{
			name: 'encrypt',
			typeDef: `typeof import('${resolve('../lib/encryption.ts')}').encrypt`,
		},
		{
			name: 'encryptString',
			typeDef: `typeof import('${resolve('../lib/encryption.ts')}').encryptString`,
		},
		{
			name: 'decrypt',
			typeDef: `typeof import('${resolve('../lib/encryption.ts')}').decrypt`,
		},
		{
			name: 'decryptToString',
			typeDef: `typeof import('${resolve('../lib/encryption.ts')}').decryptToString`,
		},
	],
});

authLib.addModule('studiocms:auth/lib/password', {
	namedExports: [
		{
			name: 'hashPassword',
			typeDef: `typeof import('${resolve('../lib/password.ts')}').hashPassword`,
		},
		{
			name: 'verifyPasswordHash',
			typeDef: `typeof import('${resolve('../lib/password.ts')}').verifyPasswordHash`,
		},
		{
			name: 'verifyPasswordStrength',
			typeDef: `typeof import('${resolve('../lib/password.ts')}').verifyPasswordStrength`,
		},
	],
});

authLib.addModule('studiocms:auth/lib/session', {
	namedExports: [
		{
			name: 'generateSessionToken',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').generateSessionToken`,
		},
		{
			name: 'sessionCookieName',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').sessionCookieName`,
		},
		{
			name: 'createSession',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').createSession`,
		},
		{
			name: 'validateSessionToken',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').validateSessionToken`,
		},
		{
			name: 'invalidateSession',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').invalidateSession`,
		},
		{
			name: 'setSessionTokenCookie',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').setSessionTokenCookie`,
		},
		{
			name: 'deleteSessionTokenCookie',
			typeDef: `typeof import('${resolve('../lib/session.ts')}').deleteSessionTokenCookie`,
		},
	],
	typeExports: [],
});

authLib.addModule('studiocms:auth/lib/types', {
	typeExports: [
		{
			name: 'UserTable',
			typeDef: `import('${resolve('../lib/types.ts')}').UserTable`,
		},
		{
			name: 'SessionTable',
			typeDef: `import('${resolve('../lib/types.ts')}').SessionTable`,
		},
		{
			name: 'OAuthAccountsTable',
			typeDef: `import('${resolve('../lib/types.ts')}').OAuthAccountsTable`,
		},
		{
			name: 'PermissionsTable',
			typeDef: `import('${resolve('../lib/types.ts')}').PermissionsTable`,
		},
		{
			name: 'UserSessionData',
			typeDef: `import('${resolve('../lib/types.ts')}').UserSessionData`,
		},
		{
			name: 'UserSession',
			typeDef: `import('${resolve('../lib/types.ts')}').UserSession`,
		},
		{
			name: 'SessionValidationResult',
			typeDef: `import('${resolve('../lib/types.ts')}').SessionValidationResult`,
		},
	],
});

authLib.addModule('studiocms:auth/lib/user', {});

const dtsFile = authLib.makeAstroInjectedType('auth-lib.d.ts');

export default dtsFile;
